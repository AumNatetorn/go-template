// Code generated by MockGen. DO NOT EDIT.
// Source: app/template/service.go

// Package template is a generated GoMock package.
package template

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MocktransactionRepo is a mock of transactionRepo interface.
type MocktransactionRepo struct {
	ctrl     *gomock.Controller
	recorder *MocktransactionRepoMockRecorder
}

// MocktransactionRepoMockRecorder is the mock recorder for MocktransactionRepo.
type MocktransactionRepoMockRecorder struct {
	mock *MocktransactionRepo
}

// NewMocktransactionRepo creates a new mock instance.
func NewMocktransactionRepo(ctrl *gomock.Controller) *MocktransactionRepo {
	mock := &MocktransactionRepo{ctrl: ctrl}
	mock.recorder = &MocktransactionRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocktransactionRepo) EXPECT() *MocktransactionRepoMockRecorder {
	return m.recorder
}

// Find mocks base method.
func (m *MocktransactionRepo) Find(req Request) (*Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", req)
	ret0, _ := ret[0].(*Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Find indicates an expected call of Find.
func (mr *MocktransactionRepoMockRecorder) Find(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MocktransactionRepo)(nil).Find), req)
}
